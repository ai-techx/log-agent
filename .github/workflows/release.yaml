name: Release Docker Image

on:
  release:
    types:
      - released

jobs:
  docker-service:
    permissions:
      contents: read
      id-token: write
      packages: write
    name: Build dockerized services
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.RELEASE_TOKEN }}
      - id: string
        uses: ASzc/change-string-case-action@v5
        with:
          string: ${{ github.repository }}
      - name: Build and push functions
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ghcr.io/${{ steps.string.outputs.lowercase }}:${{ github.event.release.tag_name }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ github.event.release.tag_name }}
  build-executable:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.21.x' ]
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - run: echo $GOPATH
      - name: Build with xgo
        uses: crazy-max/ghaction-xgo@v3
        with:
          xgo_version: latest
          go_version: ${{ matrix.go_version }}
          dest: dist
          prefix: log-agent
          v: true
      - name: Release
        uses: softprops/action-gh-release@v1
        if: ${{ github.event_name == 'release' }}
        with:
          files: dist/*